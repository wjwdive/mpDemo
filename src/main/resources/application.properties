
# database config
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/demo?userSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=0000

# 初始化时建立物理连接的个数，初始化发生在显示调用init方法或第一次getConnection时
spring.datasource.druid.initial-size=5
# 最大连接池数量，default=8
spring.datasource.druid.max-active= 10
# 最小连接池数量
spring.datasource.druid.min-idle= 5
# 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.druid.max-wait=60000
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。default=false
spring.datasource.druid.pool-prepared-statements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100, default=-1
spring.datasource.druid.max-pool-prepared-statement-per-connection-size= 100
#
#spring.datasource.druid.max-open-prepared-statements=
# 和上面的等价
# 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.druid.validation-query=true
# 单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
spring.datasource.druid.validation-query-timeout=10
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。 default=true
spring.datasource.druid.test-on-borrow=false
# 	归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。 default=false
spring.datasource.druid.test-on-return=false
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 default=false
spring.datasource.druid.test-while-idle=true
# 有两个含义：
#1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明; default = 1分钟（1.0.14）
#spring.datasource.druid.time-between-eviction-runs-millis=
# 连接保持空闲而不被驱逐的最小时间
#spring.datasource.druid.min-evictable-idle-time-millis=
#spring.datasource.druid.max-evictable-idle-time-millis=
#spring.datasource.druid.filters= #配置多个英文逗号分隔

#?????????
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#???????
mybatis-plus.global-config.db-config.id-type=auto
